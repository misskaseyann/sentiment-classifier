from sentiment_classifier.BagofWords import BagofWords
from sentiment_classifier.Classifier import Classifier

if __name__ == "__main__":
    print("*  negative data processing")
    bow = BagofWords("data/train/neg/", "data/stopdict/commonword", 1, False)
    bow.read()
    negdata = bow.get_processed_data()
    print("*  positive data processing")
    bow.set_fp("data/train/pos/")
    bow.read()
    #bow.write_vocab("total.txt")
    posdata = bow.get_processed_data()

    negvec = bow.vectorize(negdata)
    posvec = bow.vectorize(posdata)

    classify = Classifier(negdata, posdata, negvec, posvec)
    classify.learn()

    #  test positive.
    bow.set_fp("data/test/pos/")
    bow.read()
    testdata = bow.get_processed_data()
    testvec = bow.vectorize(testdata)
    print("*")
    print("Test Positive Set")
    total, pos, neg = classify.predict(testvec)
    print("*")
    print("FINAL PREDICTION NUMBERS TEST 1")
    print("Number positive: ")
    print(pos)
    print("Number negative: ")
    print(neg)
    print("Total documents classified: ")
    print(total)
    print("Percent predicted positive: ")
    print((pos / total) * 100)
    print("Percent predicted negative: ")
    print((neg / total) * 100)

    #  test negative.
    bow.set_fp("data/test/neg/")
    bow.read()
    testdata = bow.get_processed_data()
    testvec = bow.vectorize(testdata)
    print("*")
    print("Test Negative Set")
    total, pos, neg = classify.predict(testvec)
    print("*")
    print("FINAL PREDICTION NUMBERS TEST 1")
    print("Number positive: ")
    print(pos)
    print("Number negative: ")
    print(neg)
    print("Total documents classified: ")
    print(total)
    print("Percent predicted positive: ")
    print((pos / total) * 100)
    print("Percent predicted negative: ")
    print((neg / total) * 100)